version: '3'
services:
  EMQ:
#    build:
#      context: ./dir
#      dockerfile: Dockerfile-alternate
#      args:
#        buildno: 1
#      cache_from:
#        - alpine:latest
#        - corp/web_app:3.14
#    ports:
#      - "3000"
#      - "3000-3005"
#      - "8000:8000"
#      - "9090-9091:8080-8081"
#      - "49100:22"
#      - "127.0.0.1:8001:8001"
#      - "127.0.0.1:5000-5010:5000-5010"
#      - "6060:6060/udp"
#    networks:
#      - some-network
#      - other-network
#    logging:
#      driver: syslog
#      options:
#        syslog-address: "tcp://192.168.0.42:123"
#    environment:
#       RACK_ENV: development
#       SHOW: 'true'
#       SESSION_SECRET:
#    deploy:
#      placement:
#        constraints:
#          - node.role == manager
#         # - engine.labels.operatingsystem == ubuntu 14.04
#      update_config:
#        parallelism: 2
#        delay: 10s
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 3
#        window: 120s
#      resources:
#        limits:
#          cpus: '0.001'
#          memory: 50M
#        reservations:
#          cpus: '0.0001'
#          memory: 20M

    image: shubhashish/emq
    container_name: emq
    network_mode: "host"
#    labels:
#      - "com.example.description=Financial transaction network"
#      - "com.example.department=Finance"
#      - "com.example.label-with-empty-value"
#    volumes:
#      - db-data:/var/lib/postgresql/data
#      - db-data:/var/lib/postgresql/data

#    ports:
#     - "8125:8125/udp"
#    volumes:
#     - /etc/telegraf:/etc/telegraf
#  Spark:
#    image: sequenceiq/spark
#    container_name: spark
#    network_mode: "host"
#    ports:
#     - "8086:8086"
#     - "8083:8083"
#    volumes:
#     - /etc/influxdb:/etc/influxdb
#    command: -config /etc/influxdb/influxdb.conf
  Ignite:
    image: ignite
    container_name: ignite
    network_mode: "host"
    build:
      context: /home/subhasishp/PycharmProjects/dockerWrapper/wrapper/composer
      dockerfile: ignite_dockerfile
#    ports:
#     - "3000:3000"
  Mongo:
    image: mongo
    container_name: mongo
    network_mode: "host"
    ports:
     - "27017:27017"
#    volumes:
#     - /etc/kapacitor:/etc/kapacitor
#     - /tmp/kapacitor:/tmp